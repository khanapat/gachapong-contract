/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurrencyManager,
  CurrencyManagerInterface,
} from "../CurrencyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "CurrencyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "CurrencyWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "addCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "isCurrencyWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "removeCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewCountWhitelistedCurrencies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    name: "viewWhitelistedCurrencies",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109098061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638ab234b61161005b5780638ab234b6146100f65780638da5cb5b14610109578063c5d3a10714610124578063f2fde38b1461013757600080fd5b80631facfd9c1461008d57806343b938c5146100a8578063715018a6146100cb57806385f39b0a146100d5575b600080fd5b61009561014a565b6040519081526020015b60405180910390f35b6100bb6100b6366004610795565b61015b565b604051901515815260200161009f565b6100d361016e565b005b6100e86100e33660046107be565b6101d9565b60405161009f9291906107e0565b6100d3610104366004610795565b6102cc565b6000546040516001600160a01b03909116815260200161009f565b6100d3610132366004610795565b6103b4565b6100d3610145366004610795565b61049c565b60006101566001610567565b905090565b6000610168600183610571565b92915050565b6000546001600160a01b031633146101cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101d76000610596565b565b60606000836101e86001610567565b6101f29190610849565b83111561021157836102046001610567565b61020e9190610849565b92505b60008367ffffffffffffffff81111561022c5761022c6108bd565b604051908082528060200260200182016040528015610255578160200160208202803683370190505b50905060005b848110156102b4576102786102708288610831565b6001906105f3565b82828151811061028a5761028a6108a7565b6001600160a01b0390921660209283029190910190910152806102ac81610860565b91505061025b565b50806102c08587610831565b92509250509250929050565b6000546001600160a01b031633146103265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c4565b6103316001826105ff565b61037d5760405162461bcd60e51b815260206004820152601e60248201527f43757272656e63793a20416c72656164792077686974656c69737465642e000060448201526064016101c4565b6040516001600160a01b038216907f3cbf62b327efb2d06d36e16c10a2f5c00cf0568e2b805bd56969b15d2736107890600090a250565b6000546001600160a01b0316331461040e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c4565b610419600182610614565b6104655760405162461bcd60e51b815260206004820152601a60248201527f43757272656e63793a204e6f742077686974656c69737465642e00000000000060448201526064016101c4565b6040516001600160a01b038216907fa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b90600090a250565b6000546001600160a01b031633146104f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c4565b6001600160a01b03811661055b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c4565b61056481610596565b50565b6000610168825490565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061058f8383610629565b600061058f836001600160a01b038416610653565b600061058f836001600160a01b0384166106a2565b6000826000018281548110610640576106406108a7565b9060005260206000200154905092915050565b600081815260018301602052604081205461069a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610168565b506000610168565b6000818152600183016020526040812054801561078b5760006106c6600183610849565b85549091506000906106da90600190610849565b905081811461073f5760008660000182815481106106fa576106fa6108a7565b906000526020600020015490508087600001848154811061071d5761071d6108a7565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061075057610750610891565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610168565b6000915050610168565b6000602082840312156107a757600080fd5b81356001600160a01b038116811461058f57600080fd5b600080604083850312156107d157600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b828110156108225781516001600160a01b0316845292840192908401906001016107fd565b50505092019290925292915050565b600082198211156108445761084461087b565b500190565b60008282101561085b5761085b61087b565b500390565b60006000198214156108745761087461087b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b0de8927b5cdbe8e11822cec805bb18459797560f3670102411b33050479255c64736f6c63430008070033";

export class CurrencyManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurrencyManager> {
    return super.deploy(overrides || {}) as Promise<CurrencyManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CurrencyManager {
    return super.attach(address) as CurrencyManager;
  }
  connect(signer: Signer): CurrencyManager__factory {
    return super.connect(signer) as CurrencyManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyManagerInterface {
    return new utils.Interface(_abi) as CurrencyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurrencyManager {
    return new Contract(address, _abi, signerOrProvider) as CurrencyManager;
  }
}
